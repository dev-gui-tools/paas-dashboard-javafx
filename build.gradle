plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id 'de.jjohannes.extra-java-module-info' version '0.6'
    id 'edu.sc.seis.launch4j' version '2.5.1'
}

group 'com.github.shoothzj'
version '0.0.1'

mainClassName = 'com.github.shoothzj.dashboard.javafx.DashboardApplication'

repositories {
    mavenCentral()
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.github.shoothzj.dashboard.javafx'
    mainClass = 'com.github.shoothzj.dashboard.javafx.DashboardApplication'
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    // ssh
    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    // jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    // log
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.1'
    // commons
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    testImplementation('org.testng:testng:7.4.0')
}

extraJavaModuleInfo {
    module("jsch-0.1.55.jar", "com.jcraft", "0.1.55") {
        exports("com.jcraft.jsch")
    }
}

test {
    useTestNG()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

launch4j {
    bundledJrePath = 'jdk-17.0.1'
    bundledJre64Bit = true
}

task windowsExecutableDistribution(type: Zip) {
    archivesBaseName = "dashboard"
    archiveVersion = "0.0.1"
    archiveExtension = ".zip"
    destinationDirectory = file("$buildDir/distExecutable")
    from "$buildDir/launch4j"
}

task windowsAddJreToDistributable(type: Copy) {
    from zipTree(WINDOWS_JDK_PATH)
    destinationDir = file("$buildDir/launch4j")
}

windowsExecutableDistribution.dependsOn createExe
windowsExecutableDistribution.dependsOn windowsAddJreToDistributable